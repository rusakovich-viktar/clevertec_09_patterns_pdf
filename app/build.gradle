/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id "io.freefair.lombok" version "6.5.1"
    id "io.freefair.aspectj.post-compile-weaving" version "8.4"

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
ext {
    junitVersion = '5.9.3'
    mockitoVersion = '5.6.0'
    mapstructVersion = '1.5.5.Final'
    expresslyVersion = '5.0.0'
    snakeyamlVersion = '2.2'
    jakartaElApiVersion = '5.0.1'
    hibernateValidatorVersion = '8.0.1.Final'
    aspectjVersion = '1.9.20.1'
}


dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"


    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'

    implementation "org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation "jakarta.el:jakarta.el-api:${jakartaElApiVersion}"
    implementation "org.glassfish.expressly:expressly:${expresslyVersion}"
    implementation "org.yaml:snakeyaml:${snakeyamlVersion}"
    implementation "org.aspectj:aspectjrt:${aspectjVersion}"
    implementation "org.aspectj:aspectjweaver:${aspectjVersion}"
    implementation 'org.apache.logging.log4j:log4j-api:2.14.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    sourceCompatibility = JavaLanguageVersion.of(17)
    targetCompatibility = JavaLanguageVersion.of(17)
}

application {
    // Define the main class for the application.
    mainClass = 'by.clevertec.Main'
}

test {
    useJUnitPlatform()
}
